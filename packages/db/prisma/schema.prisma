// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TreeNode {
  pubkey    String
  address   String
  type      GroupType
  path      String[]
  indices   String[]
  root      String
  createdAt DateTime  @default(now())

  @@unique([type, pubkey, root])
}

model Tree {
  root        String
  type        GroupType
  blockHeight Int
  createdAt   DateTime  @default(now())

  @@unique([type, root, blockHeight])
}

model CachedEOA {
  address   String   @id
  pubkey    String   @unique
  createdAt DateTime @default(now())
}

model CachedCode {
  address   String   @id
  code      String
  createdAt DateTime @default(now())
}

enum HashScheme {
  Keccak256
}

enum AttestationScheme {
  EIP712
  Nym
}

enum GroupType {
  OneNoun
  ManyNouns
}

// The above code MUST match the schema in `packages/merkle_tree/prisma/schema.prisma
// Anything below is specific to `frontend` package.

model Post {
  id                String            @id
  root              Post?             @relation("RootDecendants", fields: [rootId], references: [id])
  parent            Post?             @relation("PostReplies", fields: [parentId], references: [id])
  replies           Post[]            @relation("PostReplies")
  descendants       Post[]            @relation("RootDecendants")
  parentId          String?
  rootId            String?
  title             String
  body              String
  upvotes           DoxedUpvote[]
  venue             String
  groupRoot         String
  timestamp         DateTime
  attestation       String
  userId            String // Nym or ETH address
  hashScheme        HashScheme
  attestationScheme AttestationScheme
  depth             Int
  createdAt         DateTime          @default(now())
  updatedAt         DateTime          @updatedAt
}

model DoxedUpvote {
  id        String   @id
  postId    String
  post      Post     @relation(fields: [postId], references: [id])
  address   String
  groupRoot String
  sig       String
  timestamp DateTime
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@unique([address, postId])
}
