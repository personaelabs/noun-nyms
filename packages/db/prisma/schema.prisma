// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model TreeNode {
  pubkey    String
  type      GroupType
  path      String[]
  indices   String[]
  createdAt DateTime  @default(now())

  @@unique([type, pubkey])
}

model Tree {
  root        String    @id
  type        GroupType
  blockHeight Int
  createdAt   DateTime  @default(now())
}

model CachedEOA {
  address   String   @id
  pubkey    String   @unique
  createdAt DateTime @default(now())
}

model CachedCode {
  address   String   @id
  code      String
  createdAt DateTime @default(now())
}

enum HashScheme {
  Keccak256
}

enum GroupType {
  OneNoun
  ManyNouns
}

// The above code MUST match the schema in `packages/merkle_tree/prisma/schema.prisma
// Anything below is specific to `frontend` package.

model NymPost {
  id         String        @id
  parentId   String?
  title      String
  body       String
  upvotes    DoxedUpvote[]
  venue      String
  groupRoot  String
  timestamp  DateTime
  fullProof  String // Serialized proof and publicinput
  hashScheme HashScheme
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

model DoxedPost {
  id         String        @id
  parentId   String?
  title      String
  body       String
  upvotes    DoxedUpvote[]
  venue      String
  groupRoot  String
  timestamp  DateTime
  sig        String
  address    String
  hashScheme HashScheme
  createdAt  DateTime      @default(now())
  updatedAt  DateTime      @updatedAt
}

model DoxedUpvote {
  id          String     @id
  postId      String
  address     String
  groupRoot   String
  sig         String
  timestamp   DateTime
  NymPost     NymPost?   @relation(fields: [nymPostId], references: [id])
  nymPostId   String?
  DoxedPost   DoxedPost? @relation(fields: [doxedPostId], references: [id])
  doxedPostId String?
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@unique([address, postId])
}
